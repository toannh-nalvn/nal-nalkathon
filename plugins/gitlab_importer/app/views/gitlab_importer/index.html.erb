<h3>Project status:</h3>
<div id="project">
  <ul>
    <li>Name: <%= @project.name %></li>
    <li>Description: <%= @project.description %></li>
    <li>Total issues: <%= @issues_count %></li>
  </ul>
</div>

<%= form_tag({ :controller => 'gitlab_importer', :action => 'import', :project_id => @project },
             :method => :post, :id => 'query_form') do %>

  <div id="query_form_with_buttons" class="hide-when-print">
    <div id="query_form_content">
      <fieldset id="input-info" class="collapsible">
        <div>
          <table>
            <tr>
              <td><label for='access_token'>Gitlab access key</label></td>
              <td><%= text_field_tag 'access_token', nil, id: 'apikeyInput', placeholder: 'Enter your Gitlab access key' %></td>
              <td><%= button_tag 'Check API KEY', type: 'button', id: 'checkApiKeyButton' %></td>
            </tr>

            <tr id="tr-gitlab_project_id">
              <td>Select project</td>
              <td>
                <%= select_tag 'gitlab_project_id', options_for_select([]), prompt: 'Select project', disabled: true %>
              </td>
            </tr>

            <tr>
              <td><label for='milestone'>Milestone</label></td>
              <td>
                <%= select_tag 'milestone_select', options_for_select([]), prompt: 'Select milestone', disabled: true %>
              </td>
            </tr>

            <tr>
              <td><label for='label'>Label</label></td>
              <td>
                <%= select_tag 'label_select', options_for_select([]), prompt: 'Select label', disabled: true %>
              </td>
            </tr>

            <tr id="ticket_type">
              <td>Issue status</td>
              <td>
                <%= select_tag 'ticket_type', options_for_select([['Open', 'open'], ['Close', 'close']]), selected: 'open' %>
              </td>
            </tr>

            <tr id="is_comment">
              <td>Comment</td>
              <td>
                <%= select_tag 'is_comment', options_for_select([['Yes', 'yes'], ['No', 'no']]), selected: 'no' %>
              </td>
            </tr>

          </table>
        </div>
      </fieldset>
    </div>

    <p class="buttons">
      <%= link_to_function l(:button_apply), '$("#query_form").submit()', :class => 'icon icon-checked' %>
      <%= link_to l(:button_clear), { :set_filter => 1, :project_id => @project.id }, :class => 'icon icon-reload' %>
    </p>
  </div>

  <script>
      document.addEventListener('DOMContentLoaded', (event) => {
          const button = document.getElementById('checkApiKeyButton');

          const updateProjectSelectOptions = (options) => {
              const $projectSelect = $('#gitlab_project_id');
              const firstOption = $projectSelect.find('option:first').clone();
              $projectSelect.empty();
              $projectSelect.prepend(firstOption);

              $.each(options, function (index, option) {
                  $projectSelect.append(
                      $('<option>', {
                          value: option.id,
                          text: option.name
                      })
                  );
              });
          }

          const updateMilestonesSelectOptions = (options) => {
              const $milestoneSelect = $('#milestone_select');
              const firstOption = $milestoneSelect.find('option:first').clone();
              $milestoneSelect.empty();
              $milestoneSelect.prepend(firstOption);

              $.each(options, function (index, option) {
                  $milestoneSelect.append(
                      $('<option>', {
                          value: option.id,
                          text: option.name
                      })
                  );
              });
          }

          const updateLabelsSelectOptions = (options) => {
              const $labelSelect = $('#label_select');
              const firstOption = $labelSelect.find('option:first').clone();
              $labelSelect.empty();
              $labelSelect.prepend(firstOption);

              $.each(options, function (index, option) {
                  $labelSelect.append(
                    $('<option>', {
                        value: option.id,
                        text: option.name
                    })
                  );
              });
          }

          // Handle click API KEY INPUT
          button.addEventListener('click', () => {
              const inputApiKeyElement = document.getElementById('apikeyInput');
              if (inputApiKeyElement) {
                  const inputApiKeyValue = inputApiKeyElement.value;
                  if (inputApiKeyValue.length > 0) {
                      $('#checkApiKeyButton').prop('disabled', true);
                      $('#apikeyInput').attr('readonly', true);

                      $.ajax({
                          url: `https://gitlab.nal.vn/api/v4/projects?private_token=${inputApiKeyValue}&visibility=private`,
                          method: 'GET',
                          timeout: 0,
                          success: function (response) {
                              const projects = response.map(({id, name}) => ({
                                  id,
                                  name
                              }));

                              $('#gitlab_project_id').prop('disabled', false);
                              updateProjectSelectOptions(projects)
                          },
                          error: function (xhr, status, error) {
                              console.error('Error:', error);
                              $('#apikeyInput').removeAttr('readonly');
                          },
                          complete: function () {
                              $('#checkApiKeyButton').prop('disabled', false);
                          }
                      });
                  }
              }
          });

          // Handle onchange project
          $('#gitlab_project_id').on('change', function () {
              const projectId = $(this).val();
              const inputApiKeyElement = document.getElementById('apikeyInput');

              if (inputApiKeyElement) {
                  const inputApiKeyValue = inputApiKeyElement.value;
                  if (inputApiKeyValue.length > 0 && projectId.length > 0) {
                      $.ajax({
                          url: `https://gitlab.nal.vn/api/v4/projects/${projectId}/milestones?private_token=${inputApiKeyValue}&visibility=private`,
                          method: 'GET',
                          timeout: 0,
                          success: function (response) {
                              const milestones = response.map(({id, title}) => ({
                                  id,
                                  name: title
                              }));

                              $('#milestone_select').prop('disabled', false);
                              updateMilestonesSelectOptions(milestones)
                          },
                          error: function (xhr, status, error) {
                              console.error('Error:', error);
                          },
                          complete: function () {

                          }
                      });

                      $.ajax({
                          url: `https://gitlab.nal.vn/api/v4/projects/${projectId}/labels?private_token=${inputApiKeyValue}&visibility=private`,
                          method: 'GET',
                          timeout: 0,
                          success: function (response) {
                              const labels = response.map(({id, name}) => ({
                                  id,
                                  name
                              }));

                              $('#label_select').prop('disabled', false);
                              updateLabelsSelectOptions(labels)
                          },
                          error: function (xhr, status, error) {
                              console.error('Error:', error);
                          },
                          complete: function () {

                          }
                      });
                  }
              }
          });
      });
  </script>
<% end %>
