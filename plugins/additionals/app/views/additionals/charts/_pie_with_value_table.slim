.additionals-chart-wrapper
  .additionals-chart-left
    canvas id="#{@chart[:id]}" style="width: #{@chart[:width]}px; height: #{@chart[:height]}px;"
  .additionals-table-of-values
    = render 'additionals/chart_table_values'

.clear-both

javascript:
  const pie_chart_#{{@chart[:id]}} = new Chart(document.getElementById("#{@chart[:id]}"), {
    type: 'pie',
    data: {
      label_ids: #{raw json_escape(@chart[:label_ids])},
      labels: #{raw json_escape(@chart[:labels])},
      datasets: #{raw json_escape(@chart[:datasets])},
      data_sum: #{raw @chart[:data_sum]},
    },
    options: {
      responsive: true,
      onClick: function(c, i) {
        e = i[0];
        if (e !== undefined && #{{@chart[:filter_path].present? ? 1 : 0}} == 1 ) {
          const activePoints = pie_chart_#{{@chart[:id]}}.getElementsAtEventForMode(c, 'nearest', { intersect: true }, false);
          const label_id = this.data.label_ids[activePoints[0].index];
          window.open("#{{@chart[:filter_path]}}" + label_id);
        }
      },
      plugins: {
        colorschemes: {
          scheme: "#{@chart[:color_schema]}",
          fillAlpha: 0.8,
        },
        tooltip: {
          displayColors: false,
          callbacks: {
            title(context) {
              return context[0].label;
            },
            label(context) {
              const v = context.dataset.data[context.dataIndex];
              const sum = context.chart.data.data_sum;
              const percentage = (v*100 / sum).toFixed(0)+"%";
              return ['#{l :label_quantity}: ' + v, '#{l :label_percentage}: ' + percentage];
            }
          }
        }
      }
    }
  });
